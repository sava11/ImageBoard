<!DOCTYPE html>
<html lang="ru">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <link type="image/favicon" rel="shortcut icon" href="/imgs/ori_ico1.svg">
  {{#if isDraft}}
  <title>—á–µ—Ä–Ω–æ–≤–∏–∫ {{documentId}}</title>
  {{/if}}
  {{#if isPublished}}
  <title>–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {{documentId}}</title>
  {{/if}}
  <link rel="stylesheet" href="/css/containers/container.css" type="text/css" />
  <link rel="stylesheet" href="/css/containers/tag container.css" type="text/css" />
  <link rel="stylesheet" href="/css/test.css" type="text/css" />
  {{#if isOwner}}
  <link rel="stylesheet" href="/css/elements/owner-dis-like.css" type="text/css" />
  {{else}}
  <link rel="stylesheet" href="/css/elements/dis-like.css" type="text/css" />
  {{/if}}
  <style>
    img {
      pointer-events: none;
    }

    .description {
      margin-top: 20px;
      font-size: 1.2em;
      color: #333;
    }
  </style>
</head>

<body {{#if voted}}onload="set_actions()" {{/if}}>
  <div class="header">
    <a class="logo" href="/">
      <img src="/imgs/ori_ico1.svg" alt="Logo">
      <span>artX</span>
    </a>
    <div class="user">
      <a href="/user/login">
        <span>{{userName}}</span>
      </a>
      {{#if isAuthenticated}}
      <button class="menu-button">
        <img src="/imgs/settings.svg" width="24px">
      </button>
      <div class="dropdown-menu hidden">
        <a href="/user/settings">
          <div class="menu-item"><span>–Ω–∞—Å—Ç—Ä–æ–π–∫–∏</span></div>
        </a>
        <a href="/post/upload">
          <div class="menu-item"><span>–∑–∞–≥—Ä—É–∑–∏—Ç—å</span></div>
        </a>
        <button id="user-exit" class="menu-item">–≤—ã–π—Ç–∏</button>
      </div>
      <script src="/js/elements/header.js"></script>
      {{/if}}
    </div>
  </div>

  <div class="content">
    <!-- –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å -->
    <!-- <div>
      <a class="adv-image" id="advertisement-image-top-a" style="width:500px;" href="" target="_blank" title="">
        <img id="advertisement-image-top" src="" alt="Advertisement">
      </a>
      <script src="/js/get-random-adv.js"></script>
    </div> -->

    <div class="flow-container">
      <div class="flow-item">
        <img src="/image/{{documentId}}" width="500px" alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"><br>
        <div class="post-actions">
          <button class="like-button " id="likeButton">
            <span class="like-icon">üëç</span>
            <span id="likeCount">{{likes}}</span>
          </button>
          <button class="dislike-button" id="dislikeButton">
            <span class="dislike-icon">üëé</span>
            <span id="dislikeCount">{{dislikes}}</span>
          </button>
        </div>
        {{#if isNotOwner}}
        –∞–≤—Ç–æ—Ä: <a href="/user/{{author_id}}">{{author_name}}</a>
        <script>
          const likeButton = document.getElementById("likeButton");
          const dislikeButton = document.getElementById("dislikeButton");

          if ({{ isAuthenticated }}) {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
            likeButton.addEventListener("click", () => handleVote(1));
            dislikeButton.addEventListener("click", () => handleVote(0));

            // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ –≥–æ–ª–æ—Å–æ–≤
            function formatVotes(votes) {
              if (votes >= 1000000) {
                return (votes / 1000000).toFixed(1).replace(/\.0$/, "") + "–º";
              } else if (votes >= 1000) {
                return (votes / 1000).toFixed(1).replace(/\.0$/, "") + "—Ç";
              }
              return votes.toString();
            }

            // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–æ–ª–æ—Å–æ–≤
            async function handleVote(vote) {
              try {
                const response = await fetch("/post/vote", {
                  method: "POST",
                  headers: {
                    Accept: "application/json",
                    "Content-type": "application/json; charset=UTF-8",
                  },
                  body: JSON.stringify({
                    post: "{{documentId}}",
                    vote_type: vote,
                  }),
                  credentials: "include",
                });

                if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏");

                const data = await response.json();

                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –≥–æ–ª–æ—Å–∞
                updateVoteUI(vote);
                console.log(data);
              } catch (error) {
                console.error(error);
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏.");
              }
            }

            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            function updateVoteUI(vote) {
              const likeCountElement = document.getElementById("likeCount");
              const dislikeCountElement = document.getElementById("dislikeCount");
              let likeCount = parseInt(likeCountElement.innerText.replace(/[^\d]/g, ""), 10);
              let dislikeCount = parseInt(dislikeCountElement.innerText.replace(/[^\d]/g, ""), 10);

              if (vote === 1) {
                if (!likeButton.classList.contains("active")) {
                  likeCount += 1;
                  if (dislikeButton.classList.contains("active")) {
                    dislikeCount -= 1;
                  }
                } else {
                  likeCount -= 1;
                }
                likeButton.classList.toggle("active");
                dislikeButton.classList.remove("active");
              } else {
                if (!dislikeButton.classList.contains("active")) {
                  dislikeCount += 1;
                  if (likeButton.classList.contains("active")) {
                    likeCount -= 1;
                  }
                } else {
                  dislikeCount -= 1;
                }
                dislikeButton.classList.toggle("active");
                likeButton.classList.remove("active");
              }

              likeCountElement.innerText = formatVotes(likeCount);
              dislikeCountElement.innerText = formatVotes(dislikeCount);
            }
          } else {
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
            likeButton.addEventListener("click", () => window.location.replace("/user/login"));
            dislikeButton.addEventListener("click", () => window.location.replace("/user/login"));
          }
        </script>
        {{/if}}
        <div class="description">
          <h2>–û–ø–∏—Å–∞–Ω–∏–µ:</h2>
          {{description}}
        </div>
      </div>

      <div class="flow-item">
        <div class="tag-container">
          {{#each tags}}
          <div id="tag_{{this.id}}" class="tag">{{this.name}}</div>
          {{/each}}
        </div>
      </div>
    </div>
  </div>
  {{#if voted}}
  <script>
    function set_actions() {
      if ({{ postAction }}== 0) {
      dislikeButton.classList.toggle("active");
      likeButton.classList.remove("active");
    }
    if ({{ postAction }}== 1) {
      likeButton.classList.toggle("active");
      dislikeButton.classList.remove("active");
    }
    }
  </script>
  {{/if}}
</body>

</html>